var documenterSearchIndex = {"docs":
[{"location":"apis/apis/#Latin-morphology-API-documentation","page":"Latin Morphology API","title":"Latin morphology API documentation","text":"","category":"section"},{"location":"apis/apis/","page":"Latin Morphology API","title":"Latin Morphology API","text":"Pages = [\"apis.md\"]\nDepth = 3","category":"page"},{"location":"apis/apis/#Public-types","page":"Latin Morphology API","title":"Public types","text":"","category":"section"},{"location":"apis/apis/","page":"Latin Morphology API","title":"Latin Morphology API","text":"LatinMorphologicalForm\nLatinNoun\nLMFFiniteVerb","category":"page"},{"location":"apis/apis/#Tabulae.LatinMorphologicalForm","page":"Latin Morphology API","title":"Tabulae.LatinMorphologicalForm","text":"Abstract type of a morphological form.\n\n\n\n\n\n","category":"type"},{"location":"apis/apis/#Tabulae.LMFFiniteVerb","page":"Latin Morphology API","title":"Tabulae.LMFFiniteVerb","text":"Finite verbs have person, number, tense, mood and voice.\n\n\n\n\n\n","category":"type"},{"location":"apis/apis/#Public-function-APIs","page":"Latin Morphology API","title":"Public function APIs","text":"","category":"section"},{"location":"apis/apis/","page":"Latin Morphology API","title":"Latin Morphology API","text":"fromfst\nformurn","category":"page"},{"location":"apis/apis/#Internal-APIs","page":"Latin Morphology API","title":"Internal APIs","text":"","category":"section"},{"location":"apis/apis/","page":"Latin Morphology API","title":"Latin Morphology API","text":"Tabulae.nounfromfst\nTabulae.verbfromfst","category":"page"},{"location":"apis/apis/#Tabulae.nounfromfst","page":"Latin Morphology API","title":"Tabulae.nounfromfst","text":"Parse a string of SFST output into a LatinNoun form.\n\nnounfromfst(fstdata)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/apis/#Tabulae.verbfromfst","page":"Latin Morphology API","title":"Tabulae.verbfromfst","text":"Parse a string of SFST output into a LMFFiniteVerb.\n\nverbfromfst(fstdata)\n\n\n\n\n\n\n","category":"function"},{"location":"guide/formurns/#LatinMorphologicalForma-and-FormUrns","page":"FormUrns","title":"LatinMorphologicalForma  and FormUrns","text":"","category":"section"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Implementations of the LatinMorphologicalForm are interchangeable with FormUrns in the Tabulae collection.","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"We can directly construct LatinMorphologicalForms with type-specific parameters.  For example, a LMFFiniteVerb can be directly constructed with values for the person, number, tense, mood and voice, and a LatinNoun with values for gender, case, and number.","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"using Tabulae\nverb = LMFFiniteVerb(3,1,1,1,1)\nformurn(verb)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"noun = LatinNoun(1,1,1)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.jl can represent LatinMorphologicalForms as FormUrns belonging to a collection of URN values for Latin morphology.  We can convert any LatinMorphologicalForm to a FormUrn with the formurn function.","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"nounUrn = formurn(noun)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Object identifiers in this collection are ten-character strings with each character representing an integer code for the following morphological properties:","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"\"part of speech\" (analytical type)\nperson\nnumber\ntense\nmood\nvoice\ngender\ncase\ndegree\nuninflected category","category":"page"},{"location":"guide/formurns/#Examples","page":"FormUrns","title":"Examples","text":"","category":"section"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.jl offers functions for extracting specific integer values from a FormUrn, and for composing labels for the values.","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"using Tabulae # hide\nnoun = LatinNoun(1,1,1) # hide\nurn = formurn(noun)\nTabulae.poslabel(urn)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.genderlabel(urn)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.caselabel(urn)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.numberlabel(urn)","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"Tabulae.personlabel(urn)","category":"page"},{"location":"guide/formurns/#Roundtripping","page":"FormUrns","title":"Roundtripping","text":"","category":"section"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"We can also convert a FormUrn to a Latin form object with a function still to be written...","category":"page"},{"location":"guide/formurns/","page":"FormUrns","title":"FormUrns","text":"#roundtrip = fromurn(nounUrn)","category":"page"},{"location":"#Tabulae.jl","page":"User's guide: introduction","title":"Tabulae.jl","text":"","category":"section"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"Tabulae.jl is a from-scratch rewrite in Julia of the Tabulae system implemented in Scala here.  Its initial focus is on reading output of parsers built with the Scala Tabulae system into object form, with the fromfst function.  ","category":"page"},{"location":"#Reading-output-from-a-Tabulae-parser","page":"User's guide: introduction","title":"Reading output from a Tabulae parser","text":"","category":"section"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"The fromfst function returns an Analysis object (from the CitableParserBuilder module).","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"using Tabulae\n# Example of SFST output from a parser built with Scala Tabulae:\nsfst = \"<u>latcommon.nounn6506</u><u>ls.n6506</u>can<noun><masc><is_is><div><is_is><noun>em<masc><acc><sg><u>latcommoninfl.is_is4</u>\"\nanalysis = fromfst(sfst)","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"Analysis objects include URNs, in abbreviated form, for the lexeme and the morphological form.","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"analysis.lexeme","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"analysis.form","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"You are free to use any citable collection of lexemes you prefer (although the core vocabulary in Tabulae uses a citable collection based on the citable Lewis-Short lexicon from Furman University).","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"Morphological form URNs belong to a citable collection defined by Tabulae (described in more detail on the following page). They can be parsed into objects implementing the LatinMorphologicalForm abstract type.","category":"page"},{"location":"#Implementations-of-the-LatinMorphologicalForm","page":"User's guide: introduction","title":"Implementations of the LatinMorphologicalForm","text":"","category":"section"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"Work on Tabulae.jl currently focuses on implementing the LatinMorphologicalForm abstract type, including functions to parsing the SFST output of tabulae into implementations of a LatinMorphologicalForm, and converting intances of LatinMorphologicalForms to FormUrns.","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"Currently implemented:","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"LatinNoun\nLMFFiniteVerb","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"In progress:","category":"page"},{"location":"","page":"User's guide: introduction","title":"User's guide: introduction","text":"adjectives\nadverbs\ngerunds\ngerundives\ninfinitive forms\nparticiples\npronouns\nuninflected forms","category":"page"},{"location":"apis/forms/#Basics-of-Latin-morphology","page":"FormUrns","title":"Basics of Latin morphology","text":"","category":"section"},{"location":"apis/forms/#Morphological-properties","page":"FormUrns","title":"Morphological properties","text":"","category":"section"},{"location":"apis/forms/","page":"FormUrns","title":"FormUrns","text":"LatinMorphologicalProperty\ncode\nlabel","category":"page"},{"location":"apis/forms/#Tabulae.LatinMorphologicalProperty","page":"FormUrns","title":"Tabulae.LatinMorphologicalProperty","text":"Abstract type of a morphological form in Tabulae.\n\n\n\n\n\n","category":"type"},{"location":"apis/forms/#Tabulae.code","page":"FormUrns","title":"Tabulae.code","text":"Integer code for  morphological property value.\n\ncode(lmp)\n\n\n\n\n\n\nInteger code for  tense value.\n\ncode(tense)\n\n\n\n\n\n\nInteger code for a LMPMood value.\n\ncode(mood)\n\n\n\n\n\n\nInteger code for a LMPVoice value.\n\ncode(voice)\n\n\n\n\n\n\nInteger code for a LMPPerson value.\n\ncode(person)\n\n\n\n\n\n\nInteger code for a LMPPerson value.\n\ncode(num)\n\n\n\n\n\n\nInteger code for a LMPGender value.\n\ncode(gender)\n\n\n\n\n\n\nInteger code for a LMPCase value.\n\ncode(cs)\n\n\n\n\n\n\nInteger code for a LMPPerson value.\n\ncode(degree)\n\n\n\n\n\n\nInteger code for a LMPUninflectedType value.\n\ncode(uninfl)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/forms/#CitableBase.label","page":"FormUrns","title":"CitableBase.label","text":"Delegate to specific functions based on  type's citable trait value.\n\nlabel(x)\n\n\n\n\n\n\nIt is an error to invoke the label function on material that is not citable.\n\nlabel(_, x)\n\n\n\n\n\n\nCitable text content should implement label.\n\nlabel(_, txt)\n\n\n\n\n\n\nCitable content should implement label.\n\nlabel(_, obj)\n\n\n\n\n\n\nLabel for psg.\n\nlabel(psg)\n\n\nRequired function for Citable abstraction.\n\n\n\n\n\nLabel for doc.\n\nlabel(doc)\n\n\nRequired function for Citable abstraction.\n\n\n\n\n\nImplement label function required by Citable interface  for CatalogedText.\n\nlabel(cataloged)\n\n\n\n\n\n\nLabel for AnalyzedToken (required for Citable interface).\n\nlabel(at)\n\n\n\n\n\n\nLabel for a form.\n\nlabel(mf)\n\n\nAll subclasses of LatinMorphologicalForm should implement this specifically for their subclass.\n\n\n\n\n\nHuman-readable label for morphological property value.\n\n\n\n\n\nHuman-readable label for tense value.\n\nlabel(tense)\n\n\n\n\n\n\nHuman-readable label for a LMPMood value.\n\nlabel(mood)\n\n\n\n\n\n\nHuman-readable label for a LMPVoice value.\n\nlabel(voice)\n\n\n\n\n\n\nHuman-readable label for a LMPPerson value.\n\nlabel(person)\n\n\n\n\n\n\nHuman-readable label for a LMPPerson value.\n\nlabel(num)\n\n\n\n\n\n\nHuman-readable label for a LMPGender value.\n\nlabel(gender)\n\n\n\n\n\n\nHuman-readable label for a LMPCase value.\n\nlabel(cs)\n\n\n\n\n\n\nHuman-readable label for a LMPPerson value.\n\nlabel(degree)\n\n\n\n\n\n\nHuman-readable label for a LMPUninflectedType value.\n\nlabel(uninfl)\n\n\n\n\n\n\nCompose a label for a LMFFiniteVerb\n\nlabel(verb)\n\n\n\n\n\n\nCompose a label for a LMFNoun\n\nlabel(noun)\n\n\n\n\n\n\nCompose a label for a LMFInfinitive.\n\nlabel(inf)\n\n\n\n\n\n\nHuman-readlable label for a TabulaeNounStem.\n\n@(SIGNATURES) Required for CitableTrait.\n\n\n\n\n\nHuman-readlable label for a TabulaeNounRule.\n\n@(SIGNATURES) Required for CitableTrait.\n\n\n\n\n\n","category":"function"},{"location":"apis/forms/","page":"FormUrns","title":"FormUrns","text":"Specific property types and their consturctor/accessor functions:","category":"page"},{"location":"apis/forms/","page":"FormUrns","title":"FormUrns","text":"LMFTense\nlmfTense\nLMFMood\nlmfMood\nLMFVoice\nlmfVoice\nLMFPerson\nlmfPerson\nLMFNumber\nlmfNumber\nLMFGender\nlmfGender\nLMFCase\nlmfCase\nLMFDegree\nlmfDegree\nLMFUninflectedType\nlmfUninflectedType","category":"page"}]
}
