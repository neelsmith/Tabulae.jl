# Stem types




## Reading and writing stem records


Tabulae defines a concrete subtype of the `TabulaeStem` abstraction for each kind of stem record that can be included in a Tabulae dataset.  

Each type implements the `fromcex` and `cex` functoins from the `CitableBase` package.

```{julia}
#| warning: false
using Tabulae, CitableBase

verbrow = "latcommon.verbn2280|ls.n2280|am|conj1"
verbstem = fromcex(verbrow, TabulaeVerbStem)
```


These can always be roundtripped.


```{julia}
cex(verbstem) == verbrow
```


## Common functions

All stem types identify a lexeme, an inflectional type, and a string value for the stem, that you can retrieve with the following functions from the `CitableParserBuider` and `Tabulae` packages:

```{julia}
using CitableParserBuilder
lexeme(verbstem)
```


```{julia}
stemvalue(verbstem)
```

```{julia}
inflectionclass(verbstem)
```




In addition, noun stems include an inherent gender which you can find with the `lmpGender` function (see below).



### Citable stems

Stems are citable objects in the CITE architecture interface, so you can also use these generic functions:


```{julia}
label(verbstem)
```


```{julia}
urn(verbstem)
```

:::{.callout-note}
By default, the `urn` function will return a `StemUrn`; see documentation about expanding that value to a full `Cite2Urn`.
:::




## Regular stems

### Regular verb stems: simplex verbs

- serve all analytical types made from verb stems!

### Regular verb stems: compound verbs
### Regular noun stems
### Regular adjective stems
### Uninflected stems


## Irregular stems
:::{.callout-note title="Delimited formats and Tabulae data sets"} 

- examples here include a column with joining inflectional type
- these are given by directory location in a Tabulae files data set, so text files will have one fewer column. The type is added automatically when you build a dataset.

:::

### Irregular adjectives
### Irregular adverbs
### Irregular infinitives
### Irregular nouns
### Irregular pronouns
### Irregular finite verbs

```{julia}
irregverbrow = "latcommon.irregverbn46529a|ls.n46529|sum|first|singular|present|indicative|active|irregularverb"
irregentry = fromcex(irregverbrow, TabulaeIrregularVerb)
```
